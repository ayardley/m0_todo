Before M0 is considered "final", the following need to happen:
 * find a better name for deref and/or set_ref
 * nail down calling conventions recommendations
 * get some kind of ffi implementation working *and tested* in the Perl interp, if possible
 * decide on itoa or afromi
 * carefully define the conversion semantics for itoa/afromi
 * figure out exception recommendations
 * figure out what it means to support mmapping
 * figure out endianness and word size for m0b
   - endianness will probably be little 
 * decide whether the M0 interp should install a default exception handler to puke to stderr
 * decide whether goto_chunk should be just goto or if it should also update CHUNK, BCS, etc
 * decide if there'll be support for non-uniform-sized call frames
 * complete coverage of the interp and assembler according to Devel::Cover
   - an occasional weird error condition can be uncovered, but everything that reasonably can be covered should be
 * write a glossy brochure about M0
 * blog about the long-term plan for M0 integration into Parrot